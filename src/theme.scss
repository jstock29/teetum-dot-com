@import '~@angular/material/theming'; // Plus imports for other components in your app.
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core(); // Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$teetum-primary: mat-palette($mat-pink);
$teetum-accent: mat-palette($mat-pink, A200, A100, A400); // The warn palette is optional (defaults to red).
$teetum-warn: mat-palette($mat-red); // Create the theme object (a Sass map containing all of the palettes).
$teetum-theme: mat-light-theme($teetum-primary, $teetum-accent, $teetum-warn); // Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($teetum-theme);
@mixin teetum-theme-custom($teetum-theme) {
  // retrieve variables from theme
  // (all possible variables, use only what you really need)
  $primary: map-get($teetum-theme, primary);
  $accent: map-get($teetum-theme, accent);
  $warn: map-get($teetum-theme, accent);
  // all of these variables contain many additional variables
  a {
    color: mat-color($accent) !important;
    text-decoration: none !important;
  }
}
@include teetum-theme-custom($teetum-theme);